#!/usr/bin/env bash
set -e

ACTION=$1
STEP=$2

VALID_ACTIONS=(build dev start stop help) 
# NOTE: "mobile" is removed since the development has't started
VALID_STEPS=(web server) 

PID_FILE="/tmp/p2p-chat-pids.txt"

usage() {
    cat << EOF
Usage: $0 [dev|build|start|stop|help] [web|mobile|server]

Examples:
  $0 dev          # start all apps in dev mode
  $0 dev web      # start only web in dev mode
  $0 build        # build all apps
  $0 build server # build only server
  $0 stop         # stop all running dev processes
EOF
    exit 1
}

error() {
    local msg=$1
    echo "Error: $msg" 1>&2
}

lognexec() {
    echo "$@"
    "$@"
}

run_workspace() {
    local name=$1
    echo "Running $ACTION for $name..."
    (
        cd "apps/$name" || exit 1
        lognexec npm install
        lognexec npm run "$ACTION"
    ) &

    if [[ "$ACTION" == "dev" || "$ACTION" == "start" ]]; then
        echo $! >> "$PID_FILE"
    fi
}

main() {
    if [[ -z "$ACTION" ]]; then
        error "specify action"
        exit 1
    fi

    if [[ -n "$ACTION" && ! " ${VALID_ACTIONS[@]} " =~ " $ACTION " ]]; then
        error "invalid action '$ACTION'"
        usage
    fi

    if [[ -n "$STEP" && ! " ${VALID_STEPS[@]} " =~ " $STEP " ]]; then
        error "invalid workspace '$STEP'"
        usage
    fi

    if [[ "$ACTION" == "help" ]]; then
        usage
        exit 1
    fi

    if [[ "$ACTION" == "dev" || "$ACTION" == "start" ]]; then
        > "$PID_FILE"
    fi

    if [[ "$ACTION" == "stop" ]]; then
        if [[ -f "$PID_FILE" ]]; then
            echo "Stopping processes..."
            while read -r pid; do
                if ps -p "$pid" > /dev/null 2>&1; then
                    kill "$pid"
                    echo "Stopped PID $pid"
                fi
            done < "$PID_FILE"
            rm -f "$PID_FILE"
        else
            echo "No running processes found."
        fi
        exit 0
    fi


    if [[ -z "$STEP" ]]; then
        for ws in "${VALID_STEPS[@]}"; do
            run_workspace "$ws"
        done
    else
        run_workspace "$STEP"
    fi

    if [[ "$ACTION" == "dev" ]]; then
        echo "All apps started. PIDs saved in $PID_FILE"
        wait
    else
        echo "All apps built successfully."
    fi
}

main "$@"
