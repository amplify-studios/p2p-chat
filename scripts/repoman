#!/usr/bin/env bash
#
# repoman - Npm based monorepo management script
#
# by KDesp73

set -e

ACTION=$1
STEP=$2

VALID_ACTIONS=(build dev start stop help) 
VALID_STEPS=(web server) 

PID_FILE="/tmp/p2p-chat-pids.txt"
LOG_DIR="./logs"

mkdir -p "$LOG_DIR"

usage() {
    cat << EOF
Usage: $0 [dev|build|start|stop|help] [web|server]

Examples:
  $0 dev          # start all apps in dev mode
  $0 dev web      # start only web in dev mode
  $0 build        # build all apps
  $0 build server # build only server
  $0 stop         # stop all running dev/start processes
EOF
    exit 1
}

error() {
    local msg=$1
    echo "Error: $msg" 1>&2
}

lognexec() {
    echo "$@"
    "$@"
}

run_workspace() {
    local name=$1
    echo "Running $ACTION for $name..."

    cd "apps/$name" || exit 1
    lognexec npm install

    if [[ "$ACTION" == "dev" || "$ACTION" == "start" ]]; then
        # Start in background with nohup in its own process group
        nohup setsid npm run "$ACTION" > "../../logs/$name.log" 2>&1 &
        local pid=$!
        echo $pid >> "$PID_FILE"
        echo "$name started with PID $pid"
    else
        npm run "$ACTION"
    fi
}

stop_processes() {
    if [[ -f "$PID_FILE" ]]; then
        echo "Stopping processes..."
        while read -r pid; do
            if ps -p "$pid" > /dev/null 2>&1; then
                # Kill process group, fallback to single PID
                kill -TERM -"$pid" 2>/dev/null || kill -TERM "$pid" 2>/dev/null
                echo "Stopped PID $pid"
            else
                echo "PID $pid is not running"
            fi
        done < "$PID_FILE"
        rm -f "$PID_FILE"
    else
        echo "No running processes found."
    fi
}

main() {
    if [[ -z "$ACTION" ]]; then
        error "specify action"
        exit 1
    fi

    if [[ ! " ${VALID_ACTIONS[@]} " =~ " $ACTION " ]]; then
        error "invalid action '$ACTION'"
        usage
    fi

    if [[ -n "$STEP" && ! " ${VALID_STEPS[@]} " =~ " $STEP " ]]; then
        error "invalid workspace '$STEP'"
        usage
    fi

    if [[ "$ACTION" == "help" ]]; then
        usage
    fi

    if [[ "$ACTION" == "dev" || "$ACTION" == "start" ]]; then
        > "$PID_FILE"
    fi

    if [[ "$ACTION" == "stop" ]]; then
        stop_processes
        exit 0
    fi

    if [[ -z "$STEP" ]]; then
        for ws in "${VALID_STEPS[@]}"; do
            run_workspace "$ws"
        done
    else
        run_workspace "$STEP"
    fi

    if [[ "$ACTION" == "dev" || "$ACTION" == "start" ]]; then
        echo "PIDs saved in $PID_FILE"
        wait
    else
        echo "All apps built successfully."
    fi
}

main "$@"
